The system is: Windows - 10.0.19045 - AMD64
Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: C:/Qt/Tools/mingw1120_64/bin/g++.exe 
Build flags: 
Id flags:  

The output was:
0


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.exe"

The CXX compiler identification is GNU, found in "E:/Fourteen/NewYearVersion/build/CMakeFiles/3.24.2/CompilerIdCXX/a.exe"

Determining if the CXX compiler works passed with the following output:
Change Dir: E:/Fourteen/NewYearVersion/build/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Qt/Tools/mingw1120_64/bin/mingw32-make.exe -f Makefile cmTC_f3001/fast && C:/Qt/Tools/mingw1120_64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_f3001.dir\build.make CMakeFiles/cmTC_f3001.dir/build
mingw32-make.exe[1]: Entering directory 'E:/Fourteen/NewYearVersion/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_f3001.dir/testCXXCompiler.cxx.obj
C:\Qt\Tools\mingw1120_64\bin\g++.exe    -o CMakeFiles\cmTC_f3001.dir\testCXXCompiler.cxx.obj -c E:\Fourteen\NewYearVersion\build\CMakeFiles\CMakeTmp\testCXXCompiler.cxx
Linking CXX executable cmTC_f3001.exe
C:\Qt\Tools\CMake_64\bin\cmake.exe -E cmake_link_script CMakeFiles\cmTC_f3001.dir\link.txt --verbose=1
C:\Qt\Tools\CMake_64\bin\cmake.exe -E rm -f CMakeFiles\cmTC_f3001.dir/objects.a
C:\Qt\Tools\mingw1120_64\bin\ar.exe qc CMakeFiles\cmTC_f3001.dir/objects.a @CMakeFiles\cmTC_f3001.dir\objects1.rsp
C:\Qt\Tools\mingw1120_64\bin\g++.exe -Wl,--whole-archive CMakeFiles\cmTC_f3001.dir/objects.a -Wl,--no-whole-archive -o cmTC_f3001.exe -Wl,--out-implib,libcmTC_f3001.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_f3001.dir\linklibs.rsp
mingw32-make.exe[1]: Leaving directory 'E:/Fourteen/NewYearVersion/build/CMakeFiles/CMakeTmp'



Performing C++ SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD succeeded with the following output:
Change Dir: E:/Fourteen/NewYearVersion/build/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Qt/Tools/mingw1120_64/bin/mingw32-make.exe -f Makefile cmTC_86b91/fast && C:/Qt/Tools/mingw1120_64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_86b91.dir\build.make CMakeFiles/cmTC_86b91.dir/build
mingw32-make.exe[1]: Entering directory 'E:/Fourteen/NewYearVersion/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_86b91.dir/src.cxx.obj
C:\Qt\Tools\mingw1120_64\bin\g++.exe -DCMAKE_HAVE_LIBC_PTHREAD  -std=gnu++11 -o CMakeFiles\cmTC_86b91.dir\src.cxx.obj -c E:\Fourteen\NewYearVersion\build\CMakeFiles\CMakeTmp\src.cxx
Linking CXX executable cmTC_86b91.exe
C:\Qt\Tools\CMake_64\bin\cmake.exe -E cmake_link_script CMakeFiles\cmTC_86b91.dir\link.txt --verbose=1
C:\Qt\Tools\CMake_64\bin\cmake.exe -E rm -f CMakeFiles\cmTC_86b91.dir/objects.a
C:\Qt\Tools\mingw1120_64\bin\ar.exe qc CMakeFiles\cmTC_86b91.dir/objects.a @CMakeFiles\cmTC_86b91.dir\objects1.rsp
C:\Qt\Tools\mingw1120_64\bin\g++.exe -Wl,--whole-archive CMakeFiles\cmTC_86b91.dir/objects.a -Wl,--no-whole-archive -o cmTC_86b91.exe -Wl,--out-implib,libcmTC_86b91.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_86b91.dir\linklibs.rsp
mingw32-make.exe[1]: Leaving directory 'E:/Fourteen/NewYearVersion/build/CMakeFiles/CMakeTmp'


Source file was:
#include <pthread.h>

static void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

Performing C++ SOURCE FILE Test HAVE_STDATOMIC succeeded with the following output:
Change Dir: E:/Fourteen/NewYearVersion/build/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Qt/Tools/mingw1120_64/bin/mingw32-make.exe -f Makefile cmTC_50959/fast && C:/Qt/Tools/mingw1120_64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_50959.dir\build.make CMakeFiles/cmTC_50959.dir/build
mingw32-make.exe[1]: Entering directory 'E:/Fourteen/NewYearVersion/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_50959.dir/src.cxx.obj
C:\Qt\Tools\mingw1120_64\bin\g++.exe -DHAVE_STDATOMIC  -std=gnu++11 -o CMakeFiles\cmTC_50959.dir\src.cxx.obj -c E:\Fourteen\NewYearVersion\build\CMakeFiles\CMakeTmp\src.cxx
Linking CXX executable cmTC_50959.exe
C:\Qt\Tools\CMake_64\bin\cmake.exe -E cmake_link_script CMakeFiles\cmTC_50959.dir\link.txt --verbose=1
C:\Qt\Tools\CMake_64\bin\cmake.exe -E rm -f CMakeFiles\cmTC_50959.dir/objects.a
C:\Qt\Tools\mingw1120_64\bin\ar.exe qc CMakeFiles\cmTC_50959.dir/objects.a @CMakeFiles\cmTC_50959.dir\objects1.rsp
C:\Qt\Tools\mingw1120_64\bin\g++.exe -Wl,--whole-archive CMakeFiles\cmTC_50959.dir/objects.a -Wl,--no-whole-archive -o cmTC_50959.exe -Wl,--out-implib,libcmTC_50959.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_50959.dir\linklibs.rsp
mingw32-make.exe[1]: Leaving directory 'E:/Fourteen/NewYearVersion/build/CMakeFiles/CMakeTmp'


Source file was:
#include <atomic>
#include <cstdint>

void test(volatile std::atomic<std::int64_t> &a)
{
    std::int64_t v = a.load(std::memory_order_acquire);
    while (!a.compare_exchange_strong(v, v + 1,
                                      std::memory_order_acq_rel,
                                      std::memory_order_acquire)) {
        v = a.exchange(v - 1);
    }
    a.store(v + 1, std::memory_order_release);
}

int main(int, char **)
{
    void *ptr = (void*)0xffffffc0; // any random pointer
    test(*reinterpret_cast<std::atomic<std::int64_t> *>(ptr));
    return 0;
}
